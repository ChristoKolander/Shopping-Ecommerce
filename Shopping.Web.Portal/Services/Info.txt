Namings: some strange naming conventions on Ids people might say, and that's
intentional for keeping things seperated during development. 
But at the same time, such a thing as "UserClaimStringId" is pretty
descriptive, gives a new user/reader/developer an immediate
hint on origin, use etc. 
So I will keep these working namings for now.

Search; not implemented yet. Some problems with the dictionary used inside ProductService. 
Will have a look at it.

Order/Checkout: Paypal script conflicts with Blazor script, no matter where I save and use it. Will try to
fix it.

Duplicat Code: Yes! Need to keep track of authenticationstate, but conclusion (at the moment) on a Blazor WebAssembly Client is, that this can only
be done on a per Razor-page basis, not from a service/seperate class. So when the user navigates from one page to another, the process of
handling authenticationstate needs to be repeated/checked. This is purely for trying to keep the ShoppingCart uptodate for a
returning user, either logged in or not, giving a nice experience. 
In order to accomplish this user experience I had to use LocalStorage holding on to not only saved CartItems, but also some other values
otherwise going out of scope. Global Scope a new concept for me.
Another approach might be to store these values inside the Db, retrieving these once returning to site,
but this would also add up to more roundtrips, which I am trying to avoid. Never done this before, no info found on internet,
but we will see further down, how this might be handled. 