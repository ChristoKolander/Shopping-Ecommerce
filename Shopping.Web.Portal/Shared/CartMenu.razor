@implements IDisposable
@inject ICartService shoppingCartService
@using System.Security.Claims;
@using Shopping.Web.Portal.Pages.Auth
@using Shopping.Shared.Dtos.CRUDs;




<a href="ShoppingCart" class="btn btn-info">
    <i class="oi oi-cart"></i>&nbsp;Cart
    <span class="badge bg-dark">@shoppingCartItemCount</span>
</a>


@code {


    private int shoppingCartItemCount = 0;

    protected override void OnInitialized()

    {

        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }



    protected void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }

    [Inject]
    public ICartService ShoppingCartService { get; set; }


    //protected async Task<string> GetAuth()
    //{
    //    var authState = await AuthStateProvider.GetAuthenticationStateAsync(); 
    //    var user = authState.User;
    //    if (user.Identity.IsAuthenticated)
    //    {
    //        var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier).Value.ToString();
    //        UserClaimStringId = userId;
    //    }
    //    return UserClaimStringId;
    //}

   
}
