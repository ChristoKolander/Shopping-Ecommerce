@page "/admin/manageuserclaims/{id}"
@inherits ManageUserClaimsBase
@using Shopping.Web.Components
@using Shopping.Models.Dtos;

@attribute [Authorize(Roles = "Administrator")]

<ServerValidations IsVisible="IsVisible" Result="Result" Edit="Edit">
    @RecordName
</ServerValidations>

@if (!UserClaimsDto.Claims.Any())
{

    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>

}
else
{
    <EditForm Model="UserClaimsDto" OnValidSubmit="EditUserClaims">

        <div class="card mt-3">

            <div class="card-header">
                <div class="card-header">
                    <h3>User: @EditUserDto.Email - add or remove Claims</h3>
                </div>
            </div>

            <div class="card-body">
                @for (int i = 0; i < UserClaimsDto.Claims.Count; i++)

                    {
                        var temp = i;
                        <InputCheckbox id="Selected" class="form-check-input ml-1" @bind-Value="UserClaimsDto.Claims[temp].Selected" />
                        <h5 class="card-title ml-4">@UserClaimsDto.Claims[temp].ClaimType</h5>
                    }                        
            </div>

            <div class="card-footer">
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button type="submit" class="btn btn-primary mr-1">Update Claims</button>
                        <button type="button" class="btn btn-primary mr-1" @onclick="Cancel_Click">Cancel</button>
                    </div>
                </div>
            </div>
        </div>

    </EditForm>
}
